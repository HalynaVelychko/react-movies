{"version":3,"sources":["layout/Header.jsx","layout/Footer.jsx","components/Movie.jsx","components/MoviesList.jsx","components/Preloader.jsx","components/Search.jsx","layout/Main.jsx","App.js","index.js"],"names":["Header","className","href","id","Footer","Date","getFullYear","Movie","props","title","Title","year","Year","imdbID","type","Type","poster","Poster","src","alt","MoviesList","movies","length","map","movie","Preloader","Search","state","search","handleKey","event","key","searchMovies","handleFilter","setState","target","dataset","placeholder","value","this","onChange","onKeyDown","onClick","name","data-type","checked","Component","API_KEY","process","Main","loading","str","fetch","then","response","json","data","catch","err","console","error","searchRadioMovies","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b1f5d6e.chunk.js","sourcesContent":["function Header () {\r\n    return   <nav className=\"lime darken-1\">\r\n        <div className=\"nav-wrapper\">\r\n            <a href=\"!#\" className=\"brand-logo\">React Movies</a>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                <li><a href=\"!#\">Repo</a></li>\r\n            </ul>\r\n        </div>\r\n  </nav>\r\n}\r\n\r\nexport {Header}","function Footer () {\r\n    return (\r\n        <footer className=\"page-footer lime lighten-2\">\r\n          <div className=\"footer-copyright\">\r\n            <div className=\"container\">\r\n            © {new Date().getFullYear()} Copyright Text\r\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">Repo</a>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n    )\r\n} \r\n\r\nexport {Footer}","function Movie (props) {\r\n\r\n    const {\r\n        Title: title,//перейменувала на назви з мал букви\r\n        Year: year,\r\n        imdbID: id,\r\n        Type: type,\r\n        Poster: poster\r\n    } = props\r\n\r\n    return   <div  id={id} className=\"card movie\">\r\n    <div className=\"card-image waves-effect waves-block waves-light\">\r\n        {\r\n            poster === 'N/A' ? <img className=\"activator\" \r\n            src={`https://via.placeholder.com/300x430?text=${title}`} alt=\"empty card\" /> : <img className=\"activator\" src={poster} alt=\"card with poster\"/>\r\n        }\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <span className=\"card-title activator grey-text text-darken-4\">{title}</span>\r\n      <p>{year}<span className=\"right\">{type}</span></p>\r\n    </div>\r\n  </div>\r\n\r\n}\r\n\r\nexport {Movie}","import { Movie } from './Movie';\r\n\r\nfunction MoviesList(props) {\r\n    const { movies = [] } = props;\r\n\r\n    return (\r\n        <div className='movies'>\r\n            {movies.length ? (\r\n                movies.map((movie) => (\r\n                    <Movie key={movie.imdbID} {...movie} /> //спред оператором взяли всі ключі по об'єкту, щоб не прописувати кожному key={movie.key}\r\n                ))\r\n            ) : (\r\n                <h4>Not found</h4>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { MoviesList };\r\n","function Preloader () {\r\n    return  <div className=\"progress\">\r\n        <div className=\"indeterminate\"></div>\r\n    </div>\r\n}\r\n\r\nexport {Preloader}","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        search: '',\r\n        type: 'all',\r\n    };\r\n\r\n    handleKey = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.props.searchMovies(this.state.search, this.state.type);\r\n        }\r\n    };\r\n\r\n    handleFilter = (event) => {\r\n        this.setState(\r\n            () => ({ type: event.target.dataset.type }),\r\n            () => {\r\n                this.props.searchMovies(this.state.search, this.state.type);\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className='input-field'>\r\n                    <input\r\n                        placeholder='search'\r\n                        type='search'\r\n                        className='validate'\r\n                        value={this.state.search}\r\n                        onChange={(event) =>\r\n                            this.setState({ search: event.target.value })\r\n                        }\r\n                        onKeyDown={this.handleKey}\r\n                    />\r\n                    <button\r\n                        className='btn search-btn lime'\r\n                        onClick={() =>\r\n                            this.props.searchMovies(\r\n                                this.state.search,\r\n                                this.state.type\r\n                            )\r\n                        }\r\n                    >\r\n                        Search\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <label>\r\n                        <input\r\n                            className='with-gap'\r\n                            name='type'\r\n                            type='radio'\r\n                            data-type='all'\r\n                            onChange={this.handleFilter}\r\n                            checked={this.state.type === 'all'}\r\n                        />\r\n                        <span>All</span>\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            className='with-gap'\r\n                            name='type'\r\n                            type='radio'\r\n                            data-type='movie'\r\n                            onChange={this.handleFilter}\r\n                            checked={this.state.type === 'movie'}\r\n                        />\r\n                        <span>Movies only</span>\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            className='with-gap'\r\n                            name='type'\r\n                            type='radio'\r\n                            data-type='series'\r\n                            onChange={this.handleFilter}\r\n                            checked={this.state.type === 'series'}\r\n                        />\r\n                        <span>Series only</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { Search };\r\n","import React, { Component } from 'react';\r\nimport { MoviesList } from '../components/MoviesList';\r\nimport { Preloader } from '..//components/Preloader';\r\nimport { Search } from '..//components/Search';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        movies: [],\r\n        loading: true,\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=matrix`)\r\n            .then((response) => response.json())\r\n            .then((data) =>\r\n                this.setState({ movies: data.Search, loading: false })\r\n            )\r\n            .catch((err) => {\r\n                console.error(err);\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    searchMovies = (str, type = 'all') => {\r\n        this.setState({ loading: true });\r\n        fetch(\r\n            `https://www.omdbapi.com/?apikey=${API_KEY}&s=${str}${\r\n                type !== 'all' ? `&type=${type}` : ''\r\n            }`\r\n        )\r\n            .then((response) => response.json())\r\n            .then((data) =>\r\n                this.setState({ movies: data.Search, loading: false })\r\n            )\r\n            .catch((err) => {\r\n                console.error(err);\r\n                this.setState({ loading: false });\r\n            });\r\n    };\r\n\r\n    searchRadioMovies = () => {};\r\n\r\n    render() {\r\n        const { movies, loading } = this.state;\r\n        return (\r\n            <main className='container content'>\r\n                <Search searchMovies={this.searchMovies} />\r\n                {loading ? <Preloader /> : <MoviesList movies={movies} />}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport { Main };\r\n","import {Header} from './layout/Header'\nimport {Footer} from './layout/Footer'\nimport {Main} from './layout/Main'\n\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}